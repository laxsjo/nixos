"$schema" = "https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json"
version = 2

[palette]
lavender = "#babbf1"
blue = "#8caaee"
sapphire = "#85c1dc"
sky = "#99d1db"
teal = "#81c8be"
green = "#a6d189"
yellow = "#e5c890"
peach = "#ef9f76"
maroon = "#ea999c"
red = "#e78284"
mauve = "#ca9ee6"
pink = "#f4b8e4"
text = "#ffffff"
textLight = "#c6d0f5"
textDark = "#4c4f69"
surface = "#414559"
overlay = "#737994"

[[blocks]]
type = "prompt"
alignment = "left"

  [[blocks.segments]]
  type = "text"
  style = "plain"
  foreground = "p:textLight"
  template = "╭─"

  [[blocks.segments]]
  type = "os"
  style = "diamond"
  leading_diamond = ""
  powerline_symbol = ""
  foreground = "p:text"
  background = "p:blue"
  template = "♥ ʕ•ᴥ•ʔっ{{.Icon}} "
  background_templates = [ "{{if eq .OS \"debian\"}}p:sapphire{{end}}" ]

  [[blocks.segments]]
  type = "root"
  style = "powerline"
  powerline_symbol = ""
  foreground = "p:text"
  background = "p:red"
  template = "<parentBackground></>  "

  [[blocks.segments]]
  type = "path"
  style = "powerline"
  powerline_symbol = ""
  foreground = "p:text"
  background = "p:surface"
  template = " {{ .Parent }}{{ if or .Parent .RootDir }}<p:blue>{{ .Path }}</>{{ else }}{{ .Path }}{{ end }} "

    [blocks.segments.properties]
    style = "folder"
    home_icon = "<p:green>~</>"

[[blocks]]
type = "prompt"
alignment = "right"

  [[blocks.segments]]
  type = "node"
  min_width = 220
  foreground = "p:green"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .PackageManagerIcon }}{{ .PackageManagerIcon }} {{ end }}{{ .Full }}"

    [blocks.segments.properties]
    fetch_package_manager = true
    npm_icon = "<p:red></>"
    yarn_icon = "<p:blue></>"

  [[blocks.segments]]
  type = "python"
  min_width = 220
  foreground = "p:textDark"
  background = "p:yellow"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ if .Venv }}{{ .Venv }} {{ end }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "java"
  min_width = 220
  foreground = "p:text"
  background = "p:red"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "dotnet"
  min_width = 220
  foreground = "p:blue"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Unsupported }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "go"
  min_width = 220
  foreground = "p:sapphire"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "ﳑ {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "rust"
  min_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "dart"
  min_width = 220
  foreground = "p:blue"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "angular"
  min_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "nx"
  min_width = 220
  foreground = "p:text"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "{{ if .Error }}{{ .Error }}{{ else }}Nx {{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "julia"
  min_width = 220
  foreground = "p:green"
  background = "p:mauve"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "<#ca3c34></> {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "ruby"
  min_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "azfunc"
  min_width = 220
  foreground = "p:sky"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "<#f5bf45></> {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}"

  [[blocks.segments]]
  type = "aws"
  min_width = 220
  foreground = "p:peach"
  background = "p:overlay"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{.Profile}}{{if .Region}}@{{.Region}}{{end}}"

  [[blocks.segments]]
  type = "kubectl"
  min_width = 220
  foreground = "p:text"
  background = "p:blue"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "ﴱ {{.Context}}{{if .Namespace}} :: {{.Namespace}}{{end}}"

  [[blocks.segments]]
  type = "git"
  min_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textDark"
  background = "p:red"
  background_templates = [
  "{{ if or (.Working.Changed) (.Staging.Changed) }}p:yellow{{ end }}",
  "{{ if and (gt .Ahead 0) (gt .Behind 0) }}p:teal{{ end }}",
  "{{ if gt .Ahead 0 }}p:mauve{{ end }}",
  "{{ if gt .Behind 0 }}p:mauve{{ end }}"
]
  template = " {{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}<#ef5350>  {{ .Staging.String }}</>{{ end }} "

    [blocks.segments.properties]
    branch_icon = " "
    fetch_status = true
    fetch_upstream_icon = true

  [[blocks.segments]]
  type = "session"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textLight"
  background = "p:surface"
  template = " <p:yellow>{{ .UserName }}</>@{{ .HostName }} "

  [[blocks.segments]]
  type = "battery"
  min_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textLight"
  background = "p:overlay"
  template = ' {{if not .Error}}{{if gt .Percentage 98}}󰁹{{else if gt .Percentage 90}}󰂂{{else if gt .Percentage 80}}󰂁{{else if gt .Percentage 70}}󰂀{{else if gt .Percentage 60}}󰁿{{else if gt .Percentage 50}}󰁾{{else if gt .Percentage 40}}󰁽{{else if gt .Percentage 30}}󰁼{{else if gt .Percentage 20}}󰁻{{else if gt .Percentage 0}}󰁺{{end}}{{if .Icon}}{{ .Icon }}{{else if eq "Unknown" .State.String}}<p:green> </>{{end}}{{end}}{{.Error}}'
  foreground_templates = [
  "{{if eq \"Unknown\" .State.String}}p:green{{end}}",
  "{{if eq \"Not Charging\" .State.String}}p:green{{end}}",
  "{{if gt .Percentage 80}}p:green{{end}}",
  "{{if gt .Percentage 50}}p:yellow{{end}}",
  "{{if gt .Percentage 10}}p:orange{{end}}",
  "{{if gt .Percentage 0}}p:red{{end}}"
]

    [blocks.segments.properties]
    discharging_icon = " <p:textLight></>"
    charging_icon = " <p:textLight></>"
    charged_icon = " <p:green></>"
    not_charging_icon = " <p:green></>"
    display_error = true

  [[blocks.segments]]
  type = "sysinfo"
  min_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textLight"
  background = "p:overlay"
  template = '{{if .Segments.Contains "Battery"}}|{{end}} Mem {{$memP := .PhysicalPercentUsed }}<p:yellow>{{if eq 0.0 (floor $memP)}}{{round $memP .Precision}}{{else}}{{floor $memP}}{{end}}󰏰</>/{{if gt .PhysicalTotalMemory 1800000 }}{{div .PhysicalTotalMemory 1000000000.0}}GB{{else}}{{div .PhysicalTotalMemory 1000000.0}}MB{{end}} '

    [blocks.segments.properties]
    precision = 2

  [[blocks.segments]]
  type = "owm"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:text"
  background = "p:peach"
  template = " {{.Weather}} {{.Temperature}}{{.UnitIcon}}"

    [blocks.segments.properties]
    apikey = "e6860cd372076a3adfe087b7c83285d5"
    location = "Stockholm,Stockholms kommun,SE"
    units = "metric"
    http_timeout = 1_800
    cache_timeout = 1_000

  [[blocks.segments]]
  type = "time"
  foreground = "p:text"
  background = "p:peach"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ .CurrentDate | date .Format }} "

    [blocks.segments.properties]
    time_format = "15:04"

  [[blocks.segments]]
  type = "text"
  foreground = "p:text"
  background = "p:red"
  style = "diamond"
  trailing_diamond = ""
  invert_powerline = true
  template = "(◕‿◕✿)"

[[blocks]]
type = "prompt"
alignment = "left"
newline = true

  [[blocks.segments]]
  type = "text"
  style = "plain"
  foreground = "p:textLight"
  template = "│  ╰"

  [[blocks.segments]]
  type = "executiontime"
  style = "diamond"
  leading_diamond = ""
  powerline_symbol = ""
  foreground = "p:text"
  background = "p:lavender"
  template = " 󰔟{{ .FormattedMs }} "

    [blocks.segments.properties]
    style = "roundrock"
    threshold = 0

  [[blocks.segments]]
  type = "status"
  style = "powerline"
  powerline_symbol = ""
  foreground = "p:red"
  background = "p:surface"
  template = " {{ .Code }}: {{ .Meaning }} "

  [[blocks.segments]]
  type = "text"
  style = "powerline"
  foreground = "parentBackground"
  background = "p:transparent"
  template = ""

[[blocks]]
type = "prompt"
alignment = "right"

  [[blocks.segments]]
  type = "node"
  max_width = 220
  foreground = "p:green"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .PackageManagerIcon }}{{ .PackageManagerIcon }} {{ end }}{{ .Full }} "

    [blocks.segments.properties]
    fetch_package_manager = true
    npm_icon = "<p:red></>"
    yarn_icon = "<p:blue></>"

  [[blocks.segments]]
  type = "python"
  max_width = 220
  foreground = "p:textDark"
  background = "p:yellow"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ if .Venv }}{{ .Venv }} {{ end }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "java"
  max_width = 220
  foreground = "p:text"
  background = "p:red"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "dotnet"
  max_width = 220
  foreground = "p:blue"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Unsupported }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "go"
  max_width = 220
  foreground = "p:sapphire"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "ﳑ {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "rust"
  max_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "dart"
  max_width = 220
  foreground = "p:blue"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "angular"
  max_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "nx"
  max_width = 220
  foreground = "p:text"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "{{ if .Error }}{{ .Error }}{{ else }}Nx {{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "julia"
  max_width = 220
  foreground = "p:green"
  background = "p:mauve"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "<#ca3c34></> {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "ruby"
  max_width = 220
  foreground = "p:red"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "azfunc"
  max_width = 220
  foreground = "p:sky"
  background = "p:surface"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "<#f5bf45></> {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }} "

  [[blocks.segments]]
  type = "aws"
  max_width = 220
  foreground = "p:peach"
  background = "p:overlay"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = " {{.Profile}}{{if .Region}}@{{.Region}}{{end}} "

  [[blocks.segments]]
  type = "kubectl"
  max_width = 220
  foreground = "p:text"
  background = "p:blue"
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  template = "ﴱ {{.Context}}{{if .Namespace}} :: {{.Namespace}}{{end}} "

  [[blocks.segments]]
  type = "git"
  max_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textDark"
  background = "p:red"
  background_templates = [
  "{{ if or (.Working.Changed) (.Staging.Changed) }}p:yellow{{ end }}",
  "{{ if and (gt .Ahead 0) (gt .Behind 0) }}p:teal{{ end }}",
  "{{ if gt .Ahead 0 }}p:mauve{{ end }}",
  "{{ if gt .Behind 0 }}p:mauve{{ end }}"
]
  template = " {{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}<#ef5350>  {{ .Staging.String }}</>{{ end }} "

    [blocks.segments.properties]
    branch_icon = " "
    fetch_status = true
    fetch_upstream_icon = true

  [[blocks.segments]]
  type = "battery"
  max_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textLight"
  background = "p:overlay"
  template = ' {{if not .Error}}{{if gt .Percentage 98}}󰁹{{else if gt .Percentage 90}}󰂂{{else if gt .Percentage 80}}󰂁{{else if gt .Percentage 70}}󰂀{{else if gt .Percentage 60}}󰁿{{else if gt .Percentage 50}}󰁾{{else if gt .Percentage 40}}󰁽{{else if gt .Percentage 30}}󰁼{{else if gt .Percentage 20}}󰁻{{else if gt .Percentage 0}}󰁺{{end}}{{if .Icon}}{{ .Icon }}{{else if eq "Unknown" .State.String}}<p:green> </>{{end}}{{end}}{{.Error}}'
  foreground_templates = [
  "{{if eq \"Unknown\" .State.String}}p:green{{end}}",
  "{{if eq \"Not Charging\" .State.String}}p:green{{end}}",
  "{{if gt .Percentage 80}}p:green{{end}}",
  "{{if gt .Percentage 50}}p:yellow{{end}}",
  "{{if gt .Percentage 10}}p:orange{{end}}",
  "{{if gt .Percentage 0}}p:red{{end}}"
]

    [blocks.segments.properties]
    discharging_icon = " <p:textLight></>"
    charging_icon = " <p:textLight></>"
    charged_icon = " <p:green></>"
    not_charging_icon = " <p:green></>"
    display_error = true

  [[blocks.segments]]
  type = "sysinfo"
  max_width = 220
  style = "powerline"
  powerline_symbol = ""
  invert_powerline = true
  foreground = "p:textLight"
  background = "p:overlay"
  # TODO: Should figure out total memory calculation thing
  template = '{{if .Segments.Contains "Battery"}}|{{end}} Mem {{$memP := .PhysicalPercentUsed }}<p:yellow>{{if eq 0.0 (floor $memP)}}{{round $memP .Precision}}{{else}}{{floor $memP}}{{end}}󰏰</>/{{div .PhysicalTotalMemory 1000000000.0}}GB '

    [blocks.segments.properties]
    precision = 2

  [[blocks.segments]]
  type = "text"
  max_width = 220
  style = "powerline"
  foreground = "p:textLight"
  background = "transparent"
  template = "<parentBackground></>╯ "
  properties = { }

[[blocks]]
type = "prompt"
alignment = "left"
newline = true

  [[blocks.segments]]
  type = "text"
  style = "plain"
  foreground = "p:textLight"
  template = "╰─"

  [[blocks.segments]]
  type = "status"
  style = "plain"
  foreground = "p:textLight"
  template = " "

    [blocks.segments.properties]
    always_enabled = true
